services:
  fastapi: &fastapi
    profiles: [ "prod" ]
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET=very-secured-secret
      - DB_URL=postgresql+psycopg://admin:password@postgres:5432/db_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command:
      - bash
      - -c
      - |
        uv run alembic upgrade head
        uv run gunicorn app.main:app --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker -w 8
    depends_on:
      postgres:
        condition: service_healthy

  celeryworker:
    <<: *fastapi
    ports: [ ]
    command: uv run celery -A app.infrastructure.config.celery worker -l INFO --uid=nobody --gid=nogroup

  celerybeat:
    <<: *fastapi
    ports: [ ]
    command: uv run celery -A app.infrastructure.config.celery beat -l INFO --uid=nobody --gid=nogroup -s /tmp/celerybeat-schedule

  flower:
    <<: *fastapi
    ports:
      - '5555:5555'
    command: uv run celery flower -A app.infrastructure.config.celery flower --basic_auth=admin:admin

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_DB=db_dev
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    ports:
      - '6379:6379'

  nginx:
    profiles: [ "prod" ]
    image: nginx:stable
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
    ports:
      - '8000:8000'
    depends_on:
      - fastapi
